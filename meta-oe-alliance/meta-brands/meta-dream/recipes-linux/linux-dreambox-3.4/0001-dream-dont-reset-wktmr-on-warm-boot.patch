From d9a585852522eb0859f879cf704665bf3ede3a84 Mon Sep 17 00:00:00 2001
From: Andreas Monzner <andreas.monzner@dream-property.net>
Date: Tue, 20 Dec 2016 15:40:33 +0100
Subject: [PATCH] dream: dont reset wktmr on warm boot

---
 arch/mips/brcmstb/time.c | 10 ++++++++++
 drivers/brcmstb/bchip.c  | 20 +++++++++++---------
 2 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/arch/mips/brcmstb/time.c b/arch/mips/brcmstb/time.c
index 197a2c4..c38f56a 100644
--- a/arch/mips/brcmstb/time.c
+++ b/arch/mips/brcmstb/time.c
@@ -65,13 +65,23 @@ static DEFINE_SPINLOCK(wktmr_lock);
 
 static cycle_t wktmr_cs_read(struct clocksource *cs)
 {
+	static struct wktmr_time offs = { (uint32_t)-1, (uint32_t)-1 };
 	struct wktmr_time t;
 	unsigned long flags;
 
 	spin_lock_irqsave(&wktmr_lock, flags);
 	wktmr_read(&t);
+	if (offs.pre == (uint32_t)-1 && offs.sec == offs.pre)
+		offs = t;
 	spin_unlock_irqrestore(&wktmr_lock, flags);
 
+	t.sec -= offs.sec;
+	t.pre -= offs.pre;
+	if ((int32_t)t.pre < 0) {
+		t.pre += WKTMR_FREQ;
+		--t.sec;
+	}
+
 	return (t.sec * (cycle_t)WKTMR_FREQ) + t.pre;
 }
 
diff --git a/drivers/brcmstb/bchip.c b/drivers/brcmstb/bchip.c
index 148d573..7bae487 100644
--- a/drivers/brcmstb/bchip.c
+++ b/drivers/brcmstb/bchip.c
@@ -459,14 +459,16 @@ void __init bchip_early_setup(void)
 #if defined(CONFIG_BRCM_HAS_WKTMR)
 	struct wktmr_time t;
 
-	BDEV_WR_F_RB(WKTMR_EVENT, wktmr_alarm_event, 1);
-	BDEV_WR_F_RB(WKTMR_PRESCALER, wktmr_prescaler, WKTMR_FREQ);
-	BDEV_WR_F_RB(WKTMR_COUNTER, wktmr_counter, 0);
-
-	/* wait for first tick so we know the counter is ready to use */
-	wktmr_read(&t);
-	while (wktmr_elapsed(&t) == 0)
-		;
+	if (!(BDEV_RD(AON_RAM(122)) & (3<<30))) {
+		BDEV_WR_F_RB(WKTMR_EVENT, wktmr_alarm_event, 1);
+		BDEV_WR_F_RB(WKTMR_PRESCALER, wktmr_prescaler, WKTMR_FREQ);
+		BDEV_WR_F_RB(WKTMR_COUNTER, wktmr_counter, 0);
+
+		/* wait for first tick so we know the counter is ready to use */
+		wktmr_read(&t);
+		while (wktmr_elapsed(&t) == 0)
+			;
+	}
 #endif
 
 #ifdef CONFIG_PCI
@@ -548,7 +550,7 @@ unsigned long wktmr_elapsed(struct wktmr_time *t)
 
 	wktmr_read(&now);
 	now.sec -= t->sec;
-	if (now.pre > t->pre) {
+	if (now.pre >= t->pre) {
 		now.pre -= t->pre;
 	} else {
 		now.pre = WKTMR_FREQ + now.pre - t->pre;
-- 
2.1.4

